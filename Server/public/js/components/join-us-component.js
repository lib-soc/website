
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
import { S as SvelteElement, i as init, a as attribute_to_object, b as insert_dev, q as flush, s as safe_not_equal, d as dispatch_dev, c as validate_slots, o as onMount, t as text, e as element, f as space, n as noop, g as add_location, h as attr_dev, k as set_custom_element_data, l as append_dev, m as detach_dev } from './index-9ff7cb25.js';
import { addMarkersGroups } from '../../../../../../../../../js/groups.js';
import { addMarkersCoops } from '../../../../../../../../../js/coops.js';
import { addMarkersCommunities } from '../../../../../../../../../js/communities.js';
import '../../../../../../../../../js/components/map-component.js';

/* src\join-us-component.svelte generated by Svelte v3.52.0 */

const file = "src\\join-us-component.svelte";

function create_fragment(ctx) {
	let t0;
	let div3;
	let div2;
	let h1;
	let t2;
	let div0;
	let p0;
	let t4;
	let p1;
	let t6;
	let p2;
	let t8;
	let p3;
	let t9;
	let b0;
	let t11;
	let b1;
	let t13;
	let div1;
	let p4;
	let t15;
	let ol;
	let li0;
	let a0;
	let t17;
	let t18;
	let li1;
	let a1;
	let t20;
	let t21;
	let li2;
	let a2;
	let t23;
	let p5;
	let t25;
	let p6;
	let t26;
	let a3;
	let t28;
	let t29;
	let map_component;

	const block = {
		c: function create() {
			t0 = text("Are you against exploitation of one human being by another?\r\nDo you agree that we should cooperate and not compete with each other?\r\nIn that case, you are already a libertarian socialist. Join us \r\n\r\nFInd our group, community or cooperative near you and join in order to make a world we both envision a reality. \r\n\r\nNone of them near you? Not a problem! Join our WhatsApp group and we will help you get started.\r\n");
			div3 = element("div");
			div2 = element("div");
			h1 = element("h1");
			h1.textContent = "Join us";
			t2 = space();
			div0 = element("div");
			p0 = element("p");
			p0.textContent = "1. Are you against dictatorship and in favor of democracy?";
			t4 = space();
			p1 = element("p");
			p1.textContent = "2. Are you against exploitation of one human being by another?";
			t6 = space();
			p2 = element("p");
			p2.textContent = "3. Do you agree that we should cooperate and not compete with each other?";
			t8 = space();
			p3 = element("p");
			t9 = text("If the answer is ");
			b0 = element("b");
			b0.textContent = "YES";
			t11 = text(", then you are already a libertarian socialist. ");
			b1 = element("b");
			b1.textContent = "JOIN US!";
			t13 = space();
			div1 = element("div");
			p4 = element("p");
			p4.textContent = "Find our";
			t15 = space();
			ol = element("ol");
			li0 = element("li");
			a0 = element("a");
			a0.textContent = "group";
			t17 = text(",");
			t18 = space();
			li1 = element("li");
			a1 = element("a");
			a1.textContent = "community";
			t20 = text(" or");
			t21 = space();
			li2 = element("li");
			a2 = element("a");
			a2.textContent = "cooperative";
			t23 = space();
			p5 = element("p");
			p5.textContent = "near you and join to help make a world we both envision a reality.";
			t25 = space();
			p6 = element("p");
			t26 = text("None of them near you? Not a problem! Join our ");
			a3 = element("a");
			a3.textContent = "WhatsApp group";
			t28 = text(" and we will help you start your own.");
			t29 = space();
			map_component = element("map-component");
			this.c = noop;
			add_location(h1, file, 41, 8, 1237);
			add_location(p0, file, 43, 12, 1302);
			add_location(p1, file, 44, 12, 1381);
			add_location(p2, file, 45, 12, 1464);
			add_location(b0, file, 46, 32, 1578);
			add_location(b1, file, 46, 90, 1636);
			add_location(p3, file, 46, 12, 1558);
			attr_dev(div0, "id", "condition-list");
			add_location(div0, file, 42, 8, 1263);
			add_location(p4, file, 49, 12, 1725);
			attr_dev(a0, "href", "https://chat.whatsapp.com/BhnmUNljUxJ2AjeHUwyTKh");
			add_location(a0, file, 51, 20, 1780);
			add_location(li0, file, 51, 16, 1776);
			attr_dev(a1, "href", "https://chat.whatsapp.com/BhnmUNljUxJ2AjeHUwyTKh");
			add_location(a1, file, 52, 20, 1877);
			add_location(li1, file, 52, 16, 1873);
			attr_dev(a2, "href", "https://chat.whatsapp.com/BhnmUNljUxJ2AjeHUwyTKh");
			add_location(a2, file, 53, 20, 1980);
			add_location(li2, file, 53, 16, 1976);
			add_location(ol, file, 50, 12, 1754);
			add_location(p5, file, 55, 12, 2092);
			attr_dev(div1, "id", "call-to-action-list");
			add_location(div1, file, 48, 8, 1681);
			attr_dev(a3, "href", "https://chat.whatsapp.com/BhnmUNljUxJ2AjeHUwyTKh");
			attr_dev(a3, "target", "_blank");
			attr_dev(a3, "rel", "noreferrer");
			add_location(a3, file, 57, 58, 2241);
			add_location(p6, file, 57, 8, 2191);
			set_custom_element_data(map_component, "id", "map");
			set_custom_element_data(map_component, "callback", /*mapCallback*/ ctx[0]);
			add_location(map_component, file, 58, 8, 2400);
			attr_dev(div2, "id", "text-container");
			add_location(div2, file, 40, 4, 1202);
			attr_dev(div3, "id", "container");
			add_location(div3, file, 38, 0, 1115);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, div2);
			append_dev(div2, h1);
			append_dev(div2, t2);
			append_dev(div2, div0);
			append_dev(div0, p0);
			append_dev(div0, t4);
			append_dev(div0, p1);
			append_dev(div0, t6);
			append_dev(div0, p2);
			append_dev(div0, t8);
			append_dev(div0, p3);
			append_dev(p3, t9);
			append_dev(p3, b0);
			append_dev(p3, t11);
			append_dev(p3, b1);
			append_dev(div2, t13);
			append_dev(div2, div1);
			append_dev(div1, p4);
			append_dev(div1, t15);
			append_dev(div1, ol);
			append_dev(ol, li0);
			append_dev(li0, a0);
			append_dev(li0, t17);
			append_dev(ol, t18);
			append_dev(ol, li1);
			append_dev(li1, a1);
			append_dev(li1, t20);
			append_dev(ol, t21);
			append_dev(ol, li2);
			append_dev(li2, a2);
			append_dev(div1, t23);
			append_dev(div1, p5);
			append_dev(div2, t25);
			append_dev(div2, p6);
			append_dev(p6, t26);
			append_dev(p6, a3);
			append_dev(p6, t28);
			append_dev(div2, t29);
			append_dev(div2, map_component);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('join-us-component', slots, []);

	function mapCallback(createMap) {
		let map = createMap([51.505, -0.09], 3);
		addMarkersGroups(map);
		addMarkersCoops(map);
		addMarkersCommunities(map);
	}

	onMount(() => {
		
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<join-us-component> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		onMount,
		addMarkersGroups,
		addMarkersCoops,
		addMarkersCommunities,
		mapCallback
	});

	return [mapCallback];
}

class Join_us_component extends SvelteElement {
	constructor(options) {
		super();

		this.shadowRoot.innerHTML = `<style>@import '/css/common.css';#map{--height:30rem;--width:100%;--margin-bottom:3rem}ol>li{position:relative;font-size:1.2rem;font-family:var(--serif,serif);left:3rem}#condition-list{margin-bottom:2rem}#condition-list>p{margin-bottom:1rem}#text-container{max-width:calc(100vw - 4rem);margin:auto}h1{margin-bottom:1rem;font-size:2.5rem;text-align:center}#container{margin:auto;max-width:1200px;margin-top:1rem;margin-bottom:4rem}#container>div>p{margin-bottom:1rem}#call-to-action-list>p{margin-bottom:1rem}#call-to-action-list>:nth-child(2){margin-bottom:0rem}#call-to-action-list>ol>li{margin-bottom:0.5rem}#text-container a{font-size:1.2rem;color:#DD1C1A
    }#container p{font-size:1.2rem;text-align:justify}</style>`;

		init(
			this,
			{
				target: this.shadowRoot,
				props: attribute_to_object(this.attributes),
				customElement: true
			},
			instance,
			create_fragment,
			safe_not_equal,
			{ mapCallback: 0 },
			null
		);

		if (options) {
			if (options.target) {
				insert_dev(options.target, this, options.anchor);
			}

			if (options.props) {
				this.$set(options.props);
				flush();
			}
		}
	}

	static get observedAttributes() {
		return ["mapCallback"];
	}

	get mapCallback() {
		return this.$$.ctx[0];
	}

	set mapCallback(value) {
		throw new Error("<join-us-component>: Cannot set read-only property 'mapCallback'");
	}
}

customElements.define("join-us-component", Join_us_component);

export { Join_us_component as default };
